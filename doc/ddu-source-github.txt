*ddu-source-github.txt*    A source for ddu.vim to manipulate GitHub.

Author: kyoh86 <me@kyoh86.dev>
License: MIT


==============================================================================
Contents ~
                                                  *ddu-source-github-contents*

Introduction                |ddu-source-github-introduction|
Install                    |ddu-source-github-install|
Examples                |ddu-source-github-examples|
Sources                    |ddu-source-github-sources|
Kind Body                |ddu-kind-github-body|
Kind Actions                |ddu-kind-github-actions|


==============================================================================
Introduction ~
                                              *ddu-source-github-introduction*

ddu.vim source collecting GitHub issues, pulls or repositories.

==============================================================================
Install ~
                                                   *ddu-source-github-install*

It depends on "|ddu|.vim", "|denops.vim|" and "|ddu-kind-file|".

https://github.com/Shougo/ddu.vim
https://github.com/vim-denops/denops.vim

And you should install the GitHub App for your user and your organizations if
you need:
https://github.com/apps/ddu-source-github

If you do not install it, you cannot do below with this plugin.

- Read something in the private repositories
- Update something

==============================================================================
Examples ~
                                                  *ddu-source-github-examples*

>
    " Show GitHub issue source.
    call ddu#start(#{
      \    sources: [#{ name: "github_my_issue" }],
      \    kindOptions: #{
      \        github_issue: #{
      \            defaultAction: "open",
      \        }
      \    }
      \ })
<


==============================================================================
Sources ~
                                                   *ddu-source-github-sources*
                                             *ddu-source-github-source-params*

github_my_issue
                                                  *ddu-source-github-my-issue*
    A source to collect your issues from GitHub.
    It returns items for the kind |ddu-kind-github-issue|.
    You can specify your role on issues.

    Parameter:
                                           *ddu-source-github-my-issue-params*

    hostname
        (string)
        A GitHub hostname.

        Default: "github.com"

    role
        (string)
        A your role on issues.
        You can set "created", "assigned" or "mentioned".

        Default: "assigned"
    
    state
        (string)
        A state of issues.
        You can set "open", "closed" or "all".

        Default: "open"

github_my_pull
                                                   *ddu-source-github-my-pull*
    A source to collect your pulls from GitHub.
    It returns items for the kind |ddu-kind-github-pull|.
    You can specify your role on pulls.

    Parameter:
                                            *ddu-source-github-my-pull-params*

    hostname
        (string)
        A GitHub hostname.

        Default: "github.com"

    role
        (string)
        A your role on pulls.
        You can set "created", "assigned" or "mentioned".

        Default: "assigned"
    
    state
        (string)
        A state of pulls.
        You can set "open", "closed" or "all".

        Default: "open"

github_repo_issue
                                                *ddu-source-github-repo-issue*

    A source to collect issues from a repository in GitHub.
    It returns items for the kind |ddu-kind-github-issue|.

    Parameter:
                                         *ddu-source-github-repo-issue-params*

    source
        (string)
        A source type to specify a repository.

        If you set "cwd" (default), repository is guessed by remote
        URL in the local git config of current working directory.

        If you set "repo", you must tell the repository by parameters,
        `hostname`, `owner` and `name`.

        Default: "cwd"

    remoteName
        (string)
        A remote name used to guess the repo name in the git config
        when `source` is "cwd".

        Default: "origin"

    path
        (string or null)
        Get git config as if git is called in the path instead of the
        current working directory (like `git -C`).

        Default: (null)

    hostname
        (string)
        A hostname of the repository for "repo" source type.

        Default: (null)

    owner
        (string)
        A owner of the repository for "repo" source type.

        Default: (null)
    name
        (string)
        A name of the repository for "repo" source type.

        Default: (null)

    state
        (string)
        A state of issues.
        You can set "open", "closed" or "all".

        Default: "open"


github_repo_pull
                                                 *ddu-source-github-repo-pull*

    A source to collect pulls from a repository in GitHub.
    It returns items for the kind |ddu-kind-github-pull|.

    Parameter:
                                          *ddu-source-github-repo-pull-params*

    source
        (string)
        A source type to specify a repository.

        If you set "cwd" (default), repository is guessed by remote
        URL in the local git config of current working directory.

        If you set "repo", you must tell the repository by parameters,
        `hostname`, `owner` and `name`.

        Default: "cwd"

    remoteName
        (string)
        A remote name used to guess the repo name in the git config
        when `source` is "cwd".

        Default: "origin"

    path
        (string or null)
        Get git config as if git is called in the path instead of the
        current working directory (like `git -C`).

        Default: (null)

    hostname
        (string)
        A hostname of the repository for "repo" source type.

        Default: (null)

    owner
        (string)
        A owner of the repository for "repo" source type.

        Default: (null)
    name
        (string)
        A name of the repository for "repo" source type.

        Default: (null)

    state
        (string)
        A state of issues.
        You can set "open", "closed" or "all".

        Default: "open"


github_search_repo
                                               *ddu-source-github-search-repo*

    A source to search repositories from GitHub by input.
    It returns items for the kind |ddu-kind-github-repo|.

    Parameters:
                                        *ddu-source-github-search-repo-params*

    hostname
        (string)
        A hostname of GitHub you search repositories from.

        Default: "github.com"

https://docs.github.com/en/search-github/searching-on-github/searching-for-repositories

github_search_issue
                                              *ddu-source-github-search-issue*

    A source to search issues from GitHub by input.
    It returns items for the kind |ddu-kind-github-issue|.

    Parameters:
                                       *ddu-source-github-search-issue-params*

    hostname
        (string)
        A hostname of GitHub you search issues from.

        Default: "github.com"

https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests

github_search_pull
                                               *ddu-source-github-search-pull*

    A source to search pull requests from GitHub by input.
    It returns items for the kind |ddu-kind-github-issue|.
    NOTE: it never returns items for the kind |ddu-kind-github-pull|.

    Parameters:
                                        *ddu-source-github-search-pull-params*

    hostname
        (string)
        A hostname of GitHub you search pull requests from.

        Default: "github.com"

https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests

==============================================================================
Kind Body ~
                                                             *ddu-kind-github*
                                                        *ddu-kind-github-body*

There are some kinds for GitHub. They have action data having fields below.

kind: github_issue
                                                       *ddu-kind-github_issue*
    {number}
        (number)
    {title}
        (string)
    {body}
        (string)
        A body of the issue. It may be null.
    {state}
        (string)
        A state of the issue that is "open" or "closed".
    {repository}
        (dict)
        A repository of the issue. It may be null. It has the properties below.
        {full_name}
            (string)
    {labels}
        (list)
        A list of labels of the issue. Each item has the properties below.
        {name}
            (string)
    {user}
        (dict)
        An author of the issue. It may be null. It has the properties below.
        {login}
            (string)
    {assignee}
        (dict)
        An assignee of the issue. It may be null. It has the properties below.
        {login}
            (string)
    {assignees}
        (list)
        A list of assignees of the issue. It maybe null. Each item has
        the properties below.
        {login}
            (string)
    {html_url}
        (string)

kind: github_pull
                                                        *ddu-kind-github_pull*
    {number}
        (number)
    {title}
        (string)
    {body}
        (string)
        A body of the issue. It may be null.
    {state}
        (string)
        A state of the pull request that is "open" or "closed".
    {labels}
        (list)
        A list of labels of the issue. Each item has the properties below.
        {name}
            (string)
    {user}
        (dict)
        An author of the issue. It may be null. It has the properties below.
        {login}
            (string)
    {assignee}
        (dict)
        An assignee of the issue. It may be null. It has the properties below.
        {login}
            (string)
    {assignees}
        (list)
        A list of assignees of the issue. It maybe null. Each item has
        the properties below.
        {login}
            (string)
    {cwd}
        (string)
        A directory pah that the pull request found in.
    {html_url}
        (string)

kind: github_repo
                                                        *ddu-kind-github-repo*
    {name}
        (string)
    {full_name}
        (string)
    {description}
        (string)
    {private}
        (boolean)
    {fork}
        (boolean)
    {archived}
        (boolean)
    {owner}
        (dict)
        An owner of the issue. It may be null. It has the properties below.
        {login}
            (string)
    {html_url}
        (string)

==============================================================================
Kind Actions ~
                                                     *ddu-kind-github-actions*

kind: github_issue, github_pull
                                                *ddu-kind-github_issue-action*
                                                 *ddu-kind-github-pull-action*
    open
        Open the issue/pull-request in your browser.
        Alias: browse
        Parameters:
            opener
                An external command name to open it.
                e.g. "xdg-open", "wslview", etc.
    edit
        Edit the issue/pull-request.
    append
        Place the contents of an issue/pull request after the cursor
        as per the format.
        If both of the "format" and "formatter" are not specified, it
        puts the title of the issue/pull request.

        Parameters:
            format
                The format string. You can place some values
                like literal string of the Type Script.
                `this` should be specified as an action value.
                Example: `"${this.number}: ${this.title}"`

            formatter
                A function to format the issue/pull request.
                It recives a dictionary holding below properties.
                And it should return a string.

                Example: `{issue -> issue.number .. ": " .. issue.title}`

                Supported properties:
                - number
                - title
                - html_url
                - body

            avoid
                Avoid direct adjacency with characters of the
                specified class. 

                Supported values:
                - "identifier"
                - "keyword"
                - "filename"
                - "printable"

                Pastes text with optional spacing based on
                the neighboring characters and a specified
                class to avoid direct adjacency with
                characters of that class. 

                Default: (null) that means no avoidance.

        Example: >
        call ddu#ui#do_action("itemAction", {
          \   "name": "append",
          \   "params": {
          \     "formatter": {issue -> issue.number .. ": " .. issue.title}
          \   }
          \ })
<
            It may put a number and title of the issue like below:
            `78: Doesn't work well`
    insert
        Same action as `append`, but puts the string before the cursor
        instead of after it.
    yank
        Same action as `append`, but yank the string instead of
        putting it.
    appendNumber/appendTitle/appendUrl
        Shorthands for `append`.
    insertNumber/insertTitle/insertUrl
        Shorthands for `insert`.
    yankNumber/yankTitle/yankUrl
        Shorthands for `yank`.

kind: github_repo
                                                 *ddu-kind-github-repo-action*
    open
        Open the repository in your browser.
        Alias: browse
        Parameters:
            opener
                An external command name to open it.
                e.g. "xdg-open", "wslview", etc.


==============================================================================
Kind Parameters ~
                                                 *ddu-kind-github-kind-params*

There's no params for all |ddu-kind-github-kinds|.


==============================================================================
vim:tw=78:nosi:sts=4:ts=4:sw=4:et:ft=help:norl:
